<pre class='metadata'>
Title: 2022 Spring Library Evolution Polls
Shortname: D2574
Revision: 0
Status: D
Group: WG21
Audience: WG21
Editor: Bryce Adelstein Lelbach (he/him/his) — Library Evolution Chair, NVIDIA, brycelelbach@gmail.com
URL: https://wg21.link/P2574
!Source: <a href="https://github.com/brycelelbach/wg21_p2574_2022_spring_library_evolution_polls/blob/main/2022_spring_library_evolution_polls.bs">GitHub</a>
Issue Tracking: GitHub https://github.com/brycelelbach/wg21_p2574_2022_spring_library_evolution_polls/issues
Metadata Order: Editor, Source, Issue Tracking, Project, Audience
Markup Shorthands: markdown yes
Toggle Diffs: no
No Abstract: yes
Boilerplate: style-syntax-highlighting off
Default Biblio Display: direct
</pre>

# Introduction # {#introduction}

This paper contains the decision polls that the C++ Library Evolution group
  will take in Spring of 2022.

# Voting # {#voting}

These decision polls will be conducted electronically; see [[P2195R2]] for
  more information on electronic voting procedures.

All committee members may vote, but if you have not participated in the Library
  Evolution discussions of a poll, please choose to not vote.

## How to Vote ## {#how-to-vote}

<b><a href="TODO">Vote here (C++23 polls).</a></b>

<b><a href="TODO">Vote here (C++26 and Technical Specification polls).</a></b>

A documents.isocpp.org account is necessary to vote.
If you have an isocpp.org/papers account, a documents.isocpp.org account has
  been created for you.
Just go to documents.isocpp.org and reset your password.
Email <a href="mailto:brycelelbach@gmail.com">Bryce Adelstein Lelbach</a> if you
  do not have an account or are having trouble accessing your account.

If you see "Form not found" when you go to the above link, you are not signed
  in to documents.isocpp.org.
Go to documents.isocpp.org and sign in first.

You will not receive a confirmation email after voting.
The Library Evolution chairs will send a confirmation to all voters before the
  close of the poll.

If you need to change how you voted or have any questions or issues about
  voting, please email
  <a href="mailto:brycelelbach@gmail.com">Bryce Adelstein Lelbach</a>.

## Voting Timeline ## {#voting-timeline}

- 2022-04-07: Draft polls distributed by mailing list.
- 2022-04-19: Final Library Evolution discussion telecon on the polls.
- 2022-04-20: Start of the polling period.
- 2022-05-19: End of the polling period.
- 2021-05-23: Chairs share results and summarize outcomes.

# Poll Structure # {#poll-structure}

Each poll consists of a statement; you vote on whether you support the
  statement.
All polls will be 5-way polls; you'll vote either "strongly favor",
  "weakly favor", "neutral", "weakly against", or "strongly against".

All committee members may vote, but if you have not participated in the
  Library Evolution discussions of a poll (in-person, over telecon, or
  over email), please consider whether you sufficiently understand the
  topic to be able to vote in an informed manner.
If you do not, please choose to not participate in the poll.

If you do not want to participate in a poll, select the "I do not want to
  participate in this poll" option.
Those who do not participate in a poll will not be counted or recorded.
Voting neutral is not the same as choosing to not participate; please
  don't vote neutral if you did not participate in the discussions of
  the poll.

Each poll has a comment field.
Please write a few sentences explaining the rationale for your vote.
We recommend drafting your comments in a text editor and then pasting them
  into the polling system.

Poll results and selected comments will be shared with Library Evolution after
  the end of the polling period, including attribution of your votes and
  comments.

If you want to discuss the polls or how you plan on voting, please start an
  email thread on the
  <a href="lib-ext@lists.isocpp.org">Library Evolution mailing list</a>.

You will not receive a confirmation email after voting.

If you need to see how you voted, change how you voted, or have any questions
  or issues about voting, please contact the Library Evolution chair.

## C++23 Polls ## {#polls-cpp23}

Polls phrased as "Return X" indicate that the paper was sent to Library Working
  Group for C++23 in the past, and Libary Working Group returned it to us with
  questions.

Polls phrased as "Send X" indicate that the paper has not previously been sent
  to Library Working Group for C++23.

### [[P1885R10]] Naming Text Encodings to Demystify Them

Return
  [[P1885R10]] Naming Text Encodings to Demystify Them
  to Library Working Group for C++23,
  classified as an addition ([[P0592R4]] bucket 3 item).

### [[P0792R8]] `function_ref`

Return
  [[P0792R8]] `function_ref`
  to Library Working Group for C++23,
  classified as an addition ([[P0592R4]] bucket 3 item).
  
### [[P1223R3]] `find_last`

Return
  [[P1223R3]] `find_last`
  to Library Working Group for C++23,
  classified as an addition ([[P0592R4]] bucket 3 item).

### [[P1169R3]] Static `operator()`

Send
  [[P1169R3]] Static `operator()`
  to Library Working Group for C++23,
  classified as an addition ([[P0592R4]] bucket 3 item).

### [[P2553R1]] Make `mdspan` `size_type` Controllable

Send
  [[P2553R1]] Make `mdspan` `size_type` Controllable
  to Library Working Group for C++23,
  classified as an improvement of an existing feature ([[P0592R4]] bucket 2 item).

### [[P2554R0]] C-Array Interoperability Of `mdspan`

Send
  [[P2554R0]] C-Array Interoperability Of `mdspan`
  to Library Working Group for C++23,
  classified as an improvement of an existing feature ([[P0592R4]] bucket 2 item).

### [[P2540R0]] Empty Product For Certain Views

Send
  [[P2540R0]] Empty Product For Certain Views
  to Library Working Group for C++23,
  classified as an improvement of an existing feature ([[P0592R4]] bucket 2 item).

### [[P2538R0]] ADL-Proof `projected`

Send
  [[P2538R0]] ADL-Proof `projected`
  to Library Working Group for C++23,
  classified as an improvement of an existing feature ([[P0592R4]] bucket 2 item).

### [[LWG3646]] `ranges::view_interface::size` Returns A Signed Type

Send the proposed resoluton in
  [[LWG3646]] `ranges::view_interface::size` Returns A Signed Type
  to Library Working Group for C++23,
  classified as an improvement of an existing feature ([[P0592R4]] bucket 2 item).

### [[P2520R0]] `move_iterator` Should Be A Random Access Iterator

Send
  [[P2520R0]] `move_iterator` Should Be A Random Access Iterator
  to Library Working Group for C++23,
  classified as an improvement of an existing feature ([[P0592R4]] bucket 2 item).

### [[P2499R0]] `string_view` Range Constructor Should Be Explicit

Send
  [[P2499R0]] `string_view` Range Constructor Should Be Explicit
  to Library Working Group for C++23,
  classified as an improvement of an existing feature ([[P0592R4]] bucket 2 item).

### [[P2549R0]] `unexpected` Should Have `error` As Member Accessor

Send
  [[P2549R0]] `unexpected` Should Have `error` As Member Accessor
  to Library Working Group for C++23,
  classified as an improvement of an existing feature ([[P0592R4]] bucket 2 item).

### [[P2517R0]] Add A Conditional `noexcept` Specification To `apply`

Send
  [[P2517R0]] Add A Conditional `noexcept` Specification To `apply`
  to Library Working Group for C++23,
  classified as an improvement of an existing feature ([[P0592R4]] bucket 2 item).

## C++26 and Technical Specification Polls ## {#polls-cpp26-and-ts}

### [[P2300R4]] `std::execution`

Send
  [[P2300R4]] `std::execution`
  to Library Working Group for C++26,
  classified as a focus ([[P0592R4]] bucket 1 item).

### [[P1083R5]] `resource_adaptor`

Return
  [[P1083R5]] `resource_adaptor`
  to Library Working Group for C++26,
  classified as an addition ([[P0592R4]] bucket 3 item).

### [[P1202R4]] Asymmetric Fences

Send
  [[P1202R4]] Asymmetric Fences
  to Library Working Group for the Concurrency TS v2,
  classified as an addition ([[P0592R4]] bucket 3 item).

